<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cjq.accounts.dao.OtherAccountsMapper" >
  <resultMap id="BaseResultMap" type="com.cjq.accounts.entity.OtherAccounts" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="accounts_id" property="accountsId" jdbcType="INTEGER" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="other_price" property="otherPrice" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="DtoResultMap" type="com.cjq.accounts.entity.OtherAccounts" >
    <id column="oaId" property="id" jdbcType="INTEGER" />
    <result column="accounts_id" property="accountsId" jdbcType="INTEGER" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="other_price" property="otherPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_Complex" >
      <if test="otherAccountsExample != null">
        <foreach collection="otherAccountsExample.oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and exists (select 1 from other_accounts oa where a.id = oa.accounts_id and oa.${criterion.condition})
                </when>
                <when test="criterion.singleValue" >
                  and exists (select 1 from other_accounts oa where a.id = oa.accounts_id and oa.${criterion.condition} #{criterion.value})
                </when>
                <when test="criterion.betweenValue" >
                  and exists (select 1 from other_accounts oa where a.id = oa.accounts_id and oa.${criterion.condition} #{criterion.value} and #{criterion.secondValue})
                </when>
                <when test="criterion.listValue" >
                  and exists (select 1 from other_accounts oa where a.id = oa.accounts_id and oa.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                  )
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="MysqlDialectSuffix" >
    <if test="page != null" >
       limit #{page.begin} , #{page.pageSize}
    </if>
  </sql>
  <sql id="Base_Column_List" >
    id, accounts_id, other, other_price
  </sql>
  <sql id="Base_Column_List_Complex" >
    oa.id as oaId, oa.accounts_id, oa.other, oa.other_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cjq.accounts.entity.OtherAccountsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from other_accounts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from other_accounts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from other_accounts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cjq.accounts.entity.OtherAccountsExample" >
    delete from other_accounts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cjq.accounts.entity.OtherAccounts" >
    insert into other_accounts (id, accounts_id, other, 
      other_price)
    values (#{id,jdbcType=INTEGER}, #{accountsId,jdbcType=INTEGER}, #{other,jdbcType=VARCHAR}, 
      #{otherPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.cjq.accounts.entity.OtherAccounts" >
    insert into other_accounts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountsId != null" >
        accounts_id,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="otherPrice != null" >
        other_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountsId != null" >
        #{accountsId,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="otherPrice != null" >
        #{otherPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cjq.accounts.entity.OtherAccountsExample" resultType="java.lang.Integer" >
    select count(*) from other_accounts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update other_accounts
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountsId != null" >
        accounts_id = #{record.accountsId,jdbcType=INTEGER},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.otherPrice != null" >
        other_price = #{record.otherPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update other_accounts
    set id = #{record.id,jdbcType=INTEGER},
      accounts_id = #{record.accountsId,jdbcType=INTEGER},
      other = #{record.other,jdbcType=VARCHAR},
      other_price = #{record.otherPrice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cjq.accounts.entity.OtherAccounts" >
    update other_accounts
    <set >
      <if test="accountsId != null" >
        accounts_id = #{accountsId,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="otherPrice != null" >
        other_price = #{otherPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cjq.accounts.entity.OtherAccounts" >
    update other_accounts
    set accounts_id = #{accountsId,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR},
      other_price = #{otherPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>